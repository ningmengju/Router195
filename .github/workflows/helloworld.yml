name: Build Nightly helloworld

on:
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.arch }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        arch:
          - aarch64_cortex-a53-23.05.5
          - aarch64_cortex-a53-22.03.7
          - aarch64_cortex-a53-master
          - mipsel_24kc-23.05.5

    steps:
      - name: Set Timezone
        run: |
          sudo timedatectl set-timezone Asia/Shanghai

      - name: Get latest commit SHA for helloworld and Prepare Release Notes
        shell: pwsh
        run: |
          $SHA_helloworld = (curl -sSL https://api.github.com/repos/fw876/helloworld/commits/master | jq -r '.sha')
          echo "SHA_helloworld=$SHA_helloworld" >> $env:GITHUB_ENV
          echo "https://github.com/fw876/helloworld/commits/$SHA_helloworld" >> "${{ github.workspace }}-nightly_builds_release_notes.txt"

      - name: Checkout code
        uses: actions/checkout@main
        with:
          repository: fw876/helloworld
          ref: master
          submodules: recursive

      - name: Create SSR+ Makefile
        run: |
          echo "include \$(TOPDIR)/rules.mk" > Makefile
          echo "" >> Makefile
          echo "PKG_NAME:=luci-app-ssr-plus" >> Makefile
          echo "PKG_VERSION:=$(date +%Y.%m.%d-%H%M)" >> Makefile
          echo "PKG_RELEASE:=9" >> Makefile
          echo "" >> Makefile
          echo "PKG_CONFIG_DEPENDS:= \\" >> Makefile
          echo "	CONFIG_PACKAGE_\$(PKG_NAME)_INCLUDE_Xray \\" >> Makefile
          echo "	CONFIG_PACKAGE_\$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Client \\" >> Makefile
          echo "" >> Makefile
          echo "LUCI_TITLE:=SS/Xray LuCI interface" >> Makefile
          echo "LUCI_PKGARCH:=all" >> Makefile
          echo "LUCI_DEPENDS:= \\" >> Makefile
          echo "	@(PACKAGE_libustream-mbedtls||PACKAGE_libustream-openssl||PACKAGE_libustream-wolfssl) \\" >> Makefile
          echo "	+coreutils +coreutils-base64 +dns2socks +dns2tcp +dnsmasq-full +@PACKAGE_dnsmasq_full_ipset +ipset +kmod-ipt-nat \\" >> Makefile
          echo "	+ip-full +iptables +iptables-mod-tproxy +lua +lua-neturl +libuci-lua +microsocks \\" >> Makefile
          echo "	+tcping +resolveip +shadowsocksr-libev-ssr-check +uclient-fetch \\" >> Makefile
          echo "	+PACKAGE_\$(PKG_NAME)_INCLUDE_Xray:curl \\" >> Makefile
          echo "	+PACKAGE_\$(PKG_NAME)_INCLUDE_Xray:xray-core \\" >> Makefile
          echo "	+PACKAGE_\$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Client:shadowsocks-rust-sslocal \\" >> Makefile
          echo "" >> Makefile
          echo "define Package/\$(PKG_NAME)/config" >> Makefile
          echo "	select PACKAGE_luci-lib-ipkg if PACKAGE_\$(PKG_NAME)" >> Makefile
          echo "" >> Makefile
          echo "config PACKAGE_\$(PKG_NAME)_INCLUDE_Shadowsocks_Rust_Client" >> Makefile
          echo "	bool \"Shadowsocks-rust\"" >> Makefile
          echo "	default y" >> Makefile
          echo "" >> Makefile
          echo "config PACKAGE_\$(PKG_NAME)_INCLUDE_Xray" >> Makefile
          echo "	bool \"Xray-core\"" >> Makefile
          echo "	default y" >> Makefile
          echo "" >> Makefile
          echo "endef" >> Makefile
          echo "" >> Makefile
          echo "define Package/\$(PKG_NAME)/conffiles" >> Makefile
          echo "/etc/config/shadowsocksr" >> Makefile
          echo "/etc/ssrplus/" >> Makefile
          echo "endef" >> Makefile
          echo "" >> Makefile
          echo "include \$(TOPDIR)/feeds/luci/luci.mk" >> Makefile
          echo "" >> Makefile
          echo "# call BuildPackage - OpenWrt buildroot signature" >> Makefile

      - name: Remove old SSR+ Makefile and Move new one
        run: |
          rm -f luci-app-ssr-plus/Makefile
          mv Makefile luci-app-ssr-plus/

      - name: Download SS Rust Makefile and Move new one (if aarch64)
        run: |
          if [[ "${{ matrix.arch }}" == "aarch64_cortex-a53-openwrt-22.03" ]]; then
            wget -O SSMakefile https://raw.githubusercontent.com/sbwml/openwrt_helloworld/v5/shadowsocks-rust/Makefile
            rm -f shadowsocks-rust/Makefile
            mv SSMakefile shadowsocks-rust/Makefile
          fi

      - name: Update DEPENDS in Makefile (if aarch64)
        run: |
            git clone --recurse-submodules -b master https://github.com/fw876/helloworld.git /home/runner/work/Router/ssr-libev-pcre
            cd /home/runner/work/Router/ssr-libev-pcre
            git checkout 1e7a245f7c46fb5f30c3359c2c7e4d21dee77f59
            sed -i 's/ +libopenssl-legacy//g' shadowsocksr-libev/Makefile
            rm -rf /home/runner/work/Router/Router/shadowsocksr-libev
            mv shadowsocksr-libev /home/runner/work/Router/Router/

      - name: Build
        uses: sbwml/openwrt-gh-action-sdk@helloworld
        env:
          ARCH: ${{ matrix.arch }}
          FEEDNAME: packages_ci
          PACKAGES: luci-app-ssr-plus
          NO_REFRESH_CHECK: true

      - name: Delete files
        run: |
          rm -f bin/packages/*/packages_ci/shadowsocksr-libev-ssr-local*.ipk
          rm -f bin/packages/*/packages_ci/shadowsocksr-libev-ssr-nat*.ipk
          rm -f bin/packages/*/packages_ci/shadowsocksr-libev-ssr-redir*.ipk
          rm -f bin/packages/*/packages_ci/shadowsocksr-libev-ssr-server*.ipk
          rm -f bin/packages/*/packages_ci/shadowsocks-rust-ssmanager*.ipk
          rm -f bin/packages/*/packages_ci/shadowsocks-rust-ssserver*.ipk
          rm -f bin/packages/*/packages_ci/shadowsocks-rust-ssservice*.ipk
          rm -f bin/packages/*/packages_ci/shadowsocks-rust-ssurl*.ipk
        continue-on-error: true

      - name: Zip ipk packages
        run: |
          zip -j -9 helloworld-${{ matrix.arch }}.zip bin/packages/*/packages_ci/*.ipk

      - name: Generate release tag
        run: echo "tag=$(date +"%Y.%m.%d-%H.%M_helloworld-${{ matrix.arch }}")" >> $GITHUB_ENV
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          files: |
            helloworld-${{ matrix.arch }}.zip
          body_path: ${{ github.workspace }}-nightly_builds_release_notes.txt
